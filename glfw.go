// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Fri, 23 Sep 2016 15:58:43 MSK.
// By https://git.io/cgogen. DO NOT EDIT.

package glfw

/*
#cgo darwin LDFLAGS: -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo -lglfw3
#cgo linux LDFLAGS: -lGL -lX11 -lXrandr -lXxf86vm -lXi -lXcursor -lm -lXinerama -ldl -lrt -lglfw3
#cgo windows LDFLAGS: -lopengl32 -lgdi32 -lglfw3
#cgo freebsd LDFLAGS: -lGL -lX11 -lXrandr -lXxf86vm -lXi -lXcursor -lm -lXinerama -lglfw3
#cgo darwin CFLAGS: -D_GLFW_COCOA -D_GLFW_USE_CHDIR -D_GLFW_USE_MENUBAR -D_GLFW_USE_RETINA -Wno-deprecated-declarations
#cgo linux,wayland CFLAGS: -D_GLFW_WAYLAND
#cgo linux,!wayland CFLAGS: -D_GLFW_X11
#cgo windows CFLAGS: -D_GLFW_WIN32
#cgo freebsd,wayland CFLAGS: -D_GLFW_WAYLAND -D_GLFW_HAS_DLOPEN
#cgo freebsd,!wayland CFLAGS: -D_GLFW_X11 -D_GLFW_HAS_GLXGETPROCADDRESSARB -D_GLFW_HAS_DLOPEN
#include "GLFW/glfw3.h"
#include "callbacks.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// Init function as declared in GLFW/glfw3.h:1243
func Init() int32 {
	__ret := C.glfwInit()
	__v := (int32)(__ret)
	return __v
}

// Terminate function as declared in GLFW/glfw3.h:1275
func Terminate() {
	C.glfwTerminate()
}

// GetVersion function as declared in GLFW/glfw3.h:1302
func GetVersion(major *int32, minor *int32, rev *int32) {
	cmajor, _ := (*C.int)(unsafe.Pointer(major)), cgoAllocsUnknown
	cminor, _ := (*C.int)(unsafe.Pointer(minor)), cgoAllocsUnknown
	crev, _ := (*C.int)(unsafe.Pointer(rev)), cgoAllocsUnknown
	C.glfwGetVersion(cmajor, cminor, crev)
}

// GetVersionString function as declared in GLFW/glfw3.h:1333
func GetVersionString() string {
	__ret := C.glfwGetVersionString()
	__v := packPCharString(__ret)
	return __v
}

// GetMonitors function as declared in GLFW/glfw3.h:1396
func GetMonitors(count *int32) []*Monitor {
	ccount, _ := (*C.int)(unsafe.Pointer(count)), cgoAllocsUnknown
	__ret := C.glfwGetMonitors(ccount)
	__v := (*(*[0x7fffffff]*Monitor)(unsafe.Pointer(__ret)))[:0]
	return __v
}

// GetPrimaryMonitor function as declared in GLFW/glfw3.h:1420
func GetPrimaryMonitor() *Monitor {
	__ret := C.glfwGetPrimaryMonitor()
	__v := *(**Monitor)(unsafe.Pointer(&__ret))
	return __v
}

// GetMonitorPos function as declared in GLFW/glfw3.h:1445
func GetMonitorPos(monitor *Monitor, xpos *int32, ypos *int32) {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	cxpos, _ := (*C.int)(unsafe.Pointer(xpos)), cgoAllocsUnknown
	cypos, _ := (*C.int)(unsafe.Pointer(ypos)), cgoAllocsUnknown
	C.glfwGetMonitorPos(cmonitor, cxpos, cypos)
}

// GetMonitorPhysicalSize function as declared in GLFW/glfw3.h:1479
func GetMonitorPhysicalSize(monitor *Monitor, widthMM *int32, heightMM *int32) {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	cwidthMM, _ := (*C.int)(unsafe.Pointer(widthMM)), cgoAllocsUnknown
	cheightMM, _ := (*C.int)(unsafe.Pointer(heightMM)), cgoAllocsUnknown
	C.glfwGetMonitorPhysicalSize(cmonitor, cwidthMM, cheightMM)
}

// GetMonitorName function as declared in GLFW/glfw3.h:1505
func GetMonitorName(monitor *Monitor) string {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	__ret := C.glfwGetMonitorName(cmonitor)
	__v := packPCharString(__ret)
	return __v
}

// GetVideoModes function as declared in GLFW/glfw3.h:1561
func GetVideoModes(monitor *Monitor, count *int32) *Vidmode {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	ccount, _ := (*C.int)(unsafe.Pointer(count)), cgoAllocsUnknown
	__ret := C.glfwGetVideoModes(cmonitor, ccount)
	__v := NewVidmodeRef(unsafe.Pointer(__ret))
	return __v
}

// GetVideoMode function as declared in GLFW/glfw3.h:1589
func GetVideoMode(monitor *Monitor) *Vidmode {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	__ret := C.glfwGetVideoMode(cmonitor)
	__v := NewVidmodeRef(unsafe.Pointer(__ret))
	return __v
}

// SetGamma function as declared in GLFW/glfw3.h:1611
func SetGamma(monitor *Monitor, gamma float32) {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	cgamma, _ := (C.float)(gamma), cgoAllocsUnknown
	C.glfwSetGamma(cmonitor, cgamma)
}

// GetGammaRamp function as declared in GLFW/glfw3.h:1637
func GetGammaRamp(monitor *Monitor) *Gammaramp {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	__ret := C.glfwGetGammaRamp(cmonitor)
	__v := NewGammarampRef(unsafe.Pointer(__ret))
	return __v
}

// SetGammaRamp function as declared in GLFW/glfw3.h:1667
func SetGammaRamp(monitor *Monitor, ramp *Gammaramp) {
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	cramp, _ := ramp.PassRef()
	C.glfwSetGammaRamp(cmonitor, cramp)
}

// DefaultWindowHints function as declared in GLFW/glfw3.h:1685
func DefaultWindowHints() {
	C.glfwDefaultWindowHints()
}

// WindowHint function as declared in GLFW/glfw3.h:1713
func WindowHint(hint int32, value int32) {
	chint, _ := (C.int)(hint), cgoAllocsUnknown
	cvalue, _ := (C.int)(value), cgoAllocsUnknown
	C.glfwWindowHint(chint, cvalue)
}

// CreateWindow function as declared in GLFW/glfw3.h:1834
func CreateWindow(width int32, height int32, title string, monitor *Monitor, share *Window) *Window {
	cwidth, _ := (C.int)(width), cgoAllocsUnknown
	cheight, _ := (C.int)(height), cgoAllocsUnknown
	ctitle, _ := unpackPCharString(title)
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	cshare, _ := (*C.GLFWwindow)(unsafe.Pointer(share)), cgoAllocsUnknown
	__ret := C.glfwCreateWindow(cwidth, cheight, ctitle, cmonitor, cshare)
	__v := *(**Window)(unsafe.Pointer(&__ret))
	return __v
}

// DestroyWindow function as declared in GLFW/glfw3.h:1863
func DestroyWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwDestroyWindow(cwindow)
}

// WindowShouldClose function as declared in GLFW/glfw3.h:1883
func WindowShouldClose(window *Window) int32 {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.glfwWindowShouldClose(cwindow)
	__v := (int32)(__ret)
	return __v
}

// SetWindowShouldClose function as declared in GLFW/glfw3.h:1905
func SetWindowShouldClose(window *Window, value int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cvalue, _ := (C.int)(value), cgoAllocsUnknown
	C.glfwSetWindowShouldClose(cwindow, cvalue)
}

// SetWindowTitle function as declared in GLFW/glfw3.h:1930
func SetWindowTitle(window *Window, title string) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ctitle, _ := unpackPCharString(title)
	C.glfwSetWindowTitle(cwindow, ctitle)
}

// SetWindowIcon function as declared in GLFW/glfw3.h:1969
func SetWindowIcon(window *Window, count int32, images *Image) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccount, _ := (C.int)(count), cgoAllocsUnknown
	cimages, _ := images.PassRef()
	C.glfwSetWindowIcon(cwindow, ccount, cimages)
}

// GetWindowPos function as declared in GLFW/glfw3.h:1997
func GetWindowPos(window *Window, xpos *int32, ypos *int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cxpos, _ := (*C.int)(unsafe.Pointer(xpos)), cgoAllocsUnknown
	cypos, _ := (*C.int)(unsafe.Pointer(ypos)), cgoAllocsUnknown
	C.glfwGetWindowPos(cwindow, cxpos, cypos)
}

// SetWindowPos function as declared in GLFW/glfw3.h:2028
func SetWindowPos(window *Window, xpos int32, ypos int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cxpos, _ := (C.int)(xpos), cgoAllocsUnknown
	cypos, _ := (C.int)(ypos), cgoAllocsUnknown
	C.glfwSetWindowPos(cwindow, cxpos, cypos)
}

// GetWindowSize function as declared in GLFW/glfw3.h:2058
func GetWindowSize(window *Window, width *int32, height *int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cwidth, _ := (*C.int)(unsafe.Pointer(width)), cgoAllocsUnknown
	cheight, _ := (*C.int)(unsafe.Pointer(height)), cgoAllocsUnknown
	C.glfwGetWindowSize(cwindow, cwidth, cheight)
}

// SetWindowSizeLimits function as declared in GLFW/glfw3.h:2098
func SetWindowSizeLimits(window *Window, minwidth int32, minheight int32, maxwidth int32, maxheight int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cminwidth, _ := (C.int)(minwidth), cgoAllocsUnknown
	cminheight, _ := (C.int)(minheight), cgoAllocsUnknown
	cmaxwidth, _ := (C.int)(maxwidth), cgoAllocsUnknown
	cmaxheight, _ := (C.int)(maxheight), cgoAllocsUnknown
	C.glfwSetWindowSizeLimits(cwindow, cminwidth, cminheight, cmaxwidth, cmaxheight)
}

// SetWindowAspectRatio function as declared in GLFW/glfw3.h:2138
func SetWindowAspectRatio(window *Window, numer int32, denom int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cnumer, _ := (C.int)(numer), cgoAllocsUnknown
	cdenom, _ := (C.int)(denom), cgoAllocsUnknown
	C.glfwSetWindowAspectRatio(cwindow, cnumer, cdenom)
}

// SetWindowSize function as declared in GLFW/glfw3.h:2176
func SetWindowSize(window *Window, width int32, height int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cwidth, _ := (C.int)(width), cgoAllocsUnknown
	cheight, _ := (C.int)(height), cgoAllocsUnknown
	C.glfwSetWindowSize(cwindow, cwidth, cheight)
}

// GetFramebufferSize function as declared in GLFW/glfw3.h:2205
func GetFramebufferSize(window *Window, width *int32, height *int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cwidth, _ := (*C.int)(unsafe.Pointer(width)), cgoAllocsUnknown
	cheight, _ := (*C.int)(unsafe.Pointer(height)), cgoAllocsUnknown
	C.glfwGetFramebufferSize(cwindow, cwidth, cheight)
}

// GetWindowFrameSize function as declared in GLFW/glfw3.h:2242
func GetWindowFrameSize(window *Window, left *int32, top *int32, right *int32, bottom *int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cleft, _ := (*C.int)(unsafe.Pointer(left)), cgoAllocsUnknown
	ctop, _ := (*C.int)(unsafe.Pointer(top)), cgoAllocsUnknown
	cright, _ := (*C.int)(unsafe.Pointer(right)), cgoAllocsUnknown
	cbottom, _ := (*C.int)(unsafe.Pointer(bottom)), cgoAllocsUnknown
	C.glfwGetWindowFrameSize(cwindow, cleft, ctop, cright, cbottom)
}

// IconifyWindow function as declared in GLFW/glfw3.h:2269
func IconifyWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwIconifyWindow(cwindow)
}

// RestoreWindow function as declared in GLFW/glfw3.h:2296
func RestoreWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwRestoreWindow(cwindow)
}

// MaximizeWindow function as declared in GLFW/glfw3.h:2321
func MaximizeWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwMaximizeWindow(cwindow)
}

// ShowWindow function as declared in GLFW/glfw3.h:2343
func ShowWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwShowWindow(cwindow)
}

// HideWindow function as declared in GLFW/glfw3.h:2365
func HideWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwHideWindow(cwindow)
}

// FocusWindow function as declared in GLFW/glfw3.h:2393
func FocusWindow(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwFocusWindow(cwindow)
}

// GetWindowMonitor function as declared in GLFW/glfw3.h:2415
func GetWindowMonitor(window *Window) *Monitor {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.glfwGetWindowMonitor(cwindow)
	__v := *(**Monitor)(unsafe.Pointer(&__ret))
	return __v
}

// SetWindowMonitor function as declared in GLFW/glfw3.h:2464
func SetWindowMonitor(window *Window, monitor *Monitor, xpos int32, ypos int32, width int32, height int32, refreshRate int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cmonitor, _ := (*C.GLFWmonitor)(unsafe.Pointer(monitor)), cgoAllocsUnknown
	cxpos, _ := (C.int)(xpos), cgoAllocsUnknown
	cypos, _ := (C.int)(ypos), cgoAllocsUnknown
	cwidth, _ := (C.int)(width), cgoAllocsUnknown
	cheight, _ := (C.int)(height), cgoAllocsUnknown
	crefreshRate, _ := (C.int)(refreshRate), cgoAllocsUnknown
	C.glfwSetWindowMonitor(cwindow, cmonitor, cxpos, cypos, cwidth, cheight, crefreshRate)
}

// GetWindowAttrib function as declared in GLFW/glfw3.h:2497
func GetWindowAttrib(window *Window, attrib int32) int32 {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cattrib, _ := (C.int)(attrib), cgoAllocsUnknown
	__ret := C.glfwGetWindowAttrib(cwindow, cattrib)
	__v := (int32)(__ret)
	return __v
}

// SetWindowUserPointer function as declared in GLFW/glfw3.h:2520
func SetWindowUserPointer(window *Window, pointer unsafe.Pointer) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cpointer, _ := (unsafe.Pointer)(unsafe.Pointer(pointer)), cgoAllocsUnknown
	C.glfwSetWindowUserPointer(cwindow, cpointer)
}

// GetWindowUserPointer function as declared in GLFW/glfw3.h:2541
func GetWindowUserPointer(window *Window) unsafe.Pointer {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.glfwGetWindowUserPointer(cwindow)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// PollEvents function as declared in GLFW/glfw3.h:2761
func PollEvents() {
	C.glfwPollEvents()
}

// WaitEvents function as declared in GLFW/glfw3.h:2806
func WaitEvents() {
	C.glfwWaitEvents()
}

// WaitEventsTimeout function as declared in GLFW/glfw3.h:2852
func WaitEventsTimeout(timeout float64) {
	ctimeout, _ := (C.double)(timeout), cgoAllocsUnknown
	C.glfwWaitEventsTimeout(ctimeout)
}

// PostEmptyEvent function as declared in GLFW/glfw3.h:2876
func PostEmptyEvent() {
	C.glfwPostEmptyEvent()
}

// GetInputMode function as declared in GLFW/glfw3.h:2899
func GetInputMode(window *Window, mode int32) int32 {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cmode, _ := (C.int)(mode), cgoAllocsUnknown
	__ret := C.glfwGetInputMode(cwindow, cmode)
	__v := (int32)(__ret)
	return __v
}

// SetInputMode function as declared in GLFW/glfw3.h:2947
func SetInputMode(window *Window, mode int32, value int32) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cmode, _ := (C.int)(mode), cgoAllocsUnknown
	cvalue, _ := (C.int)(value), cgoAllocsUnknown
	C.glfwSetInputMode(cwindow, cmode, cvalue)
}

// GetKeyName function as declared in GLFW/glfw3.h:3004
func GetKeyName(key int32, scancode int32) string {
	ckey, _ := (C.int)(key), cgoAllocsUnknown
	cscancode, _ := (C.int)(scancode), cgoAllocsUnknown
	__ret := C.glfwGetKeyName(ckey, cscancode)
	__v := packPCharString(__ret)
	return __v
}

// GetKey function as declared in GLFW/glfw3.h:3044
func GetKey(window *Window, key int32) int32 {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ckey, _ := (C.int)(key), cgoAllocsUnknown
	__ret := C.glfwGetKey(cwindow, ckey)
	__v := (int32)(__ret)
	return __v
}

// GetMouseButton function as declared in GLFW/glfw3.h:3073
func GetMouseButton(window *Window, button int32) int32 {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cbutton, _ := (C.int)(button), cgoAllocsUnknown
	__ret := C.glfwGetMouseButton(cwindow, cbutton)
	__v := (int32)(__ret)
	return __v
}

// GetCursorPos function as declared in GLFW/glfw3.h:3111
func GetCursorPos(window *Window, xpos *float64, ypos *float64) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cxpos, _ := (*C.double)(unsafe.Pointer(xpos)), cgoAllocsUnknown
	cypos, _ := (*C.double)(unsafe.Pointer(ypos)), cgoAllocsUnknown
	C.glfwGetCursorPos(cwindow, cxpos, cypos)
}

// SetCursorPos function as declared in GLFW/glfw3.h:3148
func SetCursorPos(window *Window, xpos float64, ypos float64) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cxpos, _ := (C.double)(xpos), cgoAllocsUnknown
	cypos, _ := (C.double)(ypos), cgoAllocsUnknown
	C.glfwSetCursorPos(cwindow, cxpos, cypos)
}

// CreateCursor function as declared in GLFW/glfw3.h:3188
func CreateCursor(image *Image, xhot int32, yhot int32) *Cursor {
	cimage, _ := image.PassRef()
	cxhot, _ := (C.int)(xhot), cgoAllocsUnknown
	cyhot, _ := (C.int)(yhot), cgoAllocsUnknown
	__ret := C.glfwCreateCursor(cimage, cxhot, cyhot)
	__v := *(**Cursor)(unsafe.Pointer(&__ret))
	return __v
}

// CreateStandardCursor function as declared in GLFW/glfw3.h:3213
func CreateStandardCursor(shape int32) *Cursor {
	cshape, _ := (C.int)(shape), cgoAllocsUnknown
	__ret := C.glfwCreateStandardCursor(cshape)
	__v := *(**Cursor)(unsafe.Pointer(&__ret))
	return __v
}

// DestroyCursor function as declared in GLFW/glfw3.h:3237
func DestroyCursor(cursor *Cursor) {
	ccursor, _ := (*C.GLFWcursor)(unsafe.Pointer(cursor)), cgoAllocsUnknown
	C.glfwDestroyCursor(ccursor)
}

// SetCursor function as declared in GLFW/glfw3.h:3264
func SetCursor(window *Window, cursor *Cursor) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccursor, _ := (*C.GLFWcursor)(unsafe.Pointer(cursor)), cgoAllocsUnknown
	C.glfwSetCursor(cwindow, ccursor)
}

// JoystickPresent function as declared in GLFW/glfw3.h:3532
func JoystickPresent(joy int32) int32 {
	cjoy, _ := (C.int)(joy), cgoAllocsUnknown
	__ret := C.glfwJoystickPresent(cjoy)
	__v := (int32)(__ret)
	return __v
}

// GetJoystickAxes function as declared in GLFW/glfw3.h:3566
func GetJoystickAxes(joy int32, count *int32) *float32 {
	cjoy, _ := (C.int)(joy), cgoAllocsUnknown
	ccount, _ := (*C.int)(unsafe.Pointer(count)), cgoAllocsUnknown
	__ret := C.glfwGetJoystickAxes(cjoy, ccount)
	__v := *(**float32)(unsafe.Pointer(&__ret))
	return __v
}

// GetJoystickButtons function as declared in GLFW/glfw3.h:3601
func GetJoystickButtons(joy int32, count *int32) string {
	cjoy, _ := (C.int)(joy), cgoAllocsUnknown
	ccount, _ := (*C.int)(unsafe.Pointer(count)), cgoAllocsUnknown
	__ret := C.glfwGetJoystickButtons(cjoy, ccount)
	__v := packPUcharString(__ret)
	return __v
}

// GetJoystickName function as declared in GLFW/glfw3.h:3633
func GetJoystickName(joy int32) string {
	cjoy, _ := (C.int)(joy), cgoAllocsUnknown
	__ret := C.glfwGetJoystickName(cjoy)
	__v := packPCharString(__ret)
	return __v
}

// SetClipboardString function as declared in GLFW/glfw3.h:3681
func SetClipboardString(window *Window, string string) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cstring, _ := unpackPCharString(string)
	C.glfwSetClipboardString(cwindow, cstring)
}

// GetClipboardString function as declared in GLFW/glfw3.h:3711
func GetClipboardString(window *Window) string {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.glfwGetClipboardString(cwindow)
	__v := packPCharString(__ret)
	return __v
}

// GetTime function as declared in GLFW/glfw3.h:3738
func GetTime() float64 {
	__ret := C.glfwGetTime()
	__v := (float64)(__ret)
	return __v
}

// SetTime function as declared in GLFW/glfw3.h:3765
func SetTime(time float64) {
	ctime, _ := (C.double)(time), cgoAllocsUnknown
	C.glfwSetTime(ctime)
}

// GetTimerValue function as declared in GLFW/glfw3.h:3787
func GetTimerValue() uint64 {
	__ret := C.glfwGetTimerValue()
	__v := (uint64)(__ret)
	return __v
}

// GetTimerFrequency function as declared in GLFW/glfw3.h:3807
func GetTimerFrequency() uint64 {
	__ret := C.glfwGetTimerFrequency()
	__v := (uint64)(__ret)
	return __v
}

// MakeContextCurrent function as declared in GLFW/glfw3.h:3841
func MakeContextCurrent(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwMakeContextCurrent(cwindow)
}

// GetCurrentContext function as declared in GLFW/glfw3.h:3862
func GetCurrentContext() *Window {
	__ret := C.glfwGetCurrentContext()
	__v := *(**Window)(unsafe.Pointer(&__ret))
	return __v
}

// SwapBuffers function as declared in GLFW/glfw3.h:3896
func SwapBuffers(window *Window) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.glfwSwapBuffers(cwindow)
}

// SwapInterval function as declared in GLFW/glfw3.h:3943
func SwapInterval(interval int32) {
	cinterval, _ := (C.int)(interval), cgoAllocsUnknown
	C.glfwSwapInterval(cinterval)
}

// ExtensionSupported function as declared in GLFW/glfw3.h:3981
func ExtensionSupported(extension string) int32 {
	cextension, _ := unpackPCharString(extension)
	__ret := C.glfwExtensionSupported(cextension)
	__v := (int32)(__ret)
	return __v
}

// VulkanSupported function as declared in GLFW/glfw3.h:4049
func VulkanSupported() int32 {
	__ret := C.glfwVulkanSupported()
	__v := (int32)(__ret)
	return __v
}

// GetRequiredInstanceExtensions function as declared in GLFW/glfw3.h:4093
func GetRequiredInstanceExtensions(count *uint32) []string {
	ccount, _ := (*C.uint32_t)(unsafe.Pointer(count)), cgoAllocsUnknown
	__ret := C.glfwGetRequiredInstanceExtensions(ccount)
	var __v []string
	packSString(__v, __ret)
	return __v
}

// SetKeyCallback function as declared in glfw/callbacks.h:10
func SetKeyCallback(window *Window, cbFunc KeyFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetKeyCallbackVoid(cwindow, ccbFunc)
}

// SetCharCallback function as declared in glfw/callbacks.h:11
func SetCharCallback(window *Window, cbFunc CharFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetCharCallbackVoid(cwindow, ccbFunc)
}

// SetCharModsCallback function as declared in glfw/callbacks.h:12
func SetCharModsCallback(window *Window, cbFunc CharmodsFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetCharModsCallbackVoid(cwindow, ccbFunc)
}

// SetMouseButtonCallback function as declared in glfw/callbacks.h:13
func SetMouseButtonCallback(window *Window, cbFunc MousebuttonFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetMouseButtonCallbackVoid(cwindow, ccbFunc)
}

// SetCursorPosCallback function as declared in glfw/callbacks.h:14
func SetCursorPosCallback(window *Window, cbFunc CursorposFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetCursorPosCallbackVoid(cwindow, ccbFunc)
}

// SetCursorEnterCallback function as declared in glfw/callbacks.h:15
func SetCursorEnterCallback(window *Window, cbFunc CursorenterFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetCursorEnterCallbackVoid(cwindow, ccbFunc)
}

// SetScrollCallback function as declared in glfw/callbacks.h:16
func SetScrollCallback(window *Window, cbFunc ScrollFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetScrollCallbackVoid(cwindow, ccbFunc)
}

// SetDropCallback function as declared in glfw/callbacks.h:17
func SetDropCallback(window *Window, cbFunc DropFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetDropCallbackVoid(cwindow, ccbFunc)
}

// SetJoystickCallback function as declared in glfw/callbacks.h:18
func SetJoystickCallback(cbFunc JoystickFunc) {
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetJoystickCallbackVoid(ccbFunc)
}

// SetErrorCallback function as declared in glfw/callbacks.h:19
func SetErrorCallback(cbFunc ErrorFunc) {
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetErrorCallbackVoid(ccbFunc)
}

// SetMonitorCallback function as declared in glfw/callbacks.h:20
func SetMonitorCallback(cbFunc MonitorFunc) {
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetMonitorCallbackVoid(ccbFunc)
}

// SetWindowPosCallback function as declared in glfw/callbacks.h:21
func SetWindowPosCallback(window *Window, cbFunc WindowposFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetWindowPosCallbackVoid(cwindow, ccbFunc)
}

// SetWindowSizeCallback function as declared in glfw/callbacks.h:22
func SetWindowSizeCallback(window *Window, cbFunc WindowsizeFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetWindowSizeCallbackVoid(cwindow, ccbFunc)
}

// SetWindowCloseCallback function as declared in glfw/callbacks.h:23
func SetWindowCloseCallback(window *Window, cbFunc WindowcloseFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetWindowCloseCallbackVoid(cwindow, ccbFunc)
}

// SetWindowRefreshCallback function as declared in glfw/callbacks.h:24
func SetWindowRefreshCallback(window *Window, cbFunc WindowrefreshFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetWindowRefreshCallbackVoid(cwindow, ccbFunc)
}

// SetWindowFocusCallback function as declared in glfw/callbacks.h:25
func SetWindowFocusCallback(window *Window, cbFunc WindowfocusFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetWindowFocusCallbackVoid(cwindow, ccbFunc)
}

// SetWindowIconifyCallback function as declared in glfw/callbacks.h:26
func SetWindowIconifyCallback(window *Window, cbFunc WindowiconifyFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetWindowIconifyCallbackVoid(cwindow, ccbFunc)
}

// SetFramebufferSizeCallback function as declared in glfw/callbacks.h:27
func SetFramebufferSizeCallback(window *Window, cbFunc FramebuffersizeFunc) {
	cwindow, _ := (*C.GLFWwindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	ccbFunc, _ := cbFunc.PassValue()
	C.glfwSetFramebufferSizeCallbackVoid(cwindow, ccbFunc)
}
